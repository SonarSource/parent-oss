
name: release
on:
  release:
    types:
      - published

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v1
      - name: Get the version
        id: get_version
        run: |
          IFS=. read major minor build <<< "${{ github.event.release.tag_name }}"
          echo ::set-output name=build::"${build}"
      - name: Promote Artifact
        id: jfrog
        env:
          ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
        run: |
          jfrog rt bpr --apikey $ARTIFACTORY_API_KEY --url https://repox.jfrog.io/artifactory --status release parent ${{ steps.get_version.outputs.build }} sonarsource-private-releases 

  maven-central-sync:
    runs-on: ubuntu-latest
    needs:
      - sonar_release
    steps:
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v1
      - name: Get the version
        id: get_version
        run: |
          IFS=. read major minor patch build <<< "${{ github.event.release.tag_name }}"
          echo ::set-output name=build::"${build}"
      - name: Create local repository directory
        id: local_repo
        run: echo ::set-output name=dir::"$(mktemp -d repo.XXXXXXXX)"
      - name: Download Artifacts
        id: jfrog
        env:
          ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
        run: |
          cd ${{ steps.local_repo.outputs.dir }} && jfrog rt download --url https://repox.jfrog.io/artifactory --apikey $ARTIFACTORY_API_KEY --fail-no-op --build "${{ github.event.repository.name }}/${{ steps.get_version.outputs.build }}" sonarsource-public-releases/
      - name: Maven Central Sync
        uses: SonarSource/gh-action_release/maven-central-sync@v3
        with:
          local-repo-dir: ${{ steps.local_repo.outputs.dir }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      - name: Notify success on Slack
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_BUILD_WEBHOOK }}
        uses: Ilshidur/action-slack@2.1.0
        with:
          args: "Maven sync successful for {{ GITHUB_REPOSITORY }} by {{ GITHUB_ACTOR }}"        
      - name: Notify failures on Slack
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_BUILD_WEBHOOK }}
        uses: Ilshidur/action-slack@2.1.0
        if: failure()
        with:
          args: "Maven sync failed, see the logs at https://github.com/{{ GITHUB_REPOSITORY }}/actions"